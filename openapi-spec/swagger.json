{
  "definitions": {
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd": {
      "description": "Cmd",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.CmdSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.CmdStatus"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "__internal",
          "kind": "Cmd",
          "version": "v1alpha1"
        },
        {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.CmdList": {
      "description": "CmdList",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "__internal",
          "kind": "CmdList",
          "version": "v1alpha1"
        },
        {
          "group": "tilt.dev",
          "kind": "CmdList",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.CmdSpec": {
      "description": "CmdSpec defines the desired state of Cmd",
      "properties": {
        "args": {
          "description": "Command-line arguments. Must have length at least 1.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dir": {
          "description": "Process working directory.\n\nIf the working directory is not specified, the command is run in the default Tilt working directory.",
          "type": "string"
        },
        "env": {
          "description": "Additional variables process environment.\n\nExpressed as a C-style array of strings of the form [\"KEY1=VALUE1\", \"KEY2=VALUE2\", ...].\n\nEnvironment variables are layered on top of the environment variables that Tilt runs with.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "readinessProbe": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Probe",
          "description": "Periodic probe of service readiness."
        },
        "restartOn": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.RestartOnSpec",
          "description": "Indicates objects that can trigger a restart of this command.\n\nRestarts can happen even if the command is already done.\n\nLogs of the currently process after the restart are discarded."
        }
      },
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.CmdStateRunning": {
      "description": "CmdStateRunning is a running state of a local command.",
      "properties": {
        "pid": {
          "description": "The process id of the command.",
          "format": "int32",
          "type": "integer"
        },
        "startedAt": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "Time at which the command was last started."
        }
      },
      "required": [
        "pid"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.CmdStateTerminated": {
      "description": "CmdStateTerminated is a terminated state of a local command.",
      "properties": {
        "exitCode": {
          "description": "Exit status from the last termination of the command",
          "format": "int32",
          "type": "integer"
        },
        "finishedAt": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "Time at which the command last terminated"
        },
        "pid": {
          "description": "The process id of the command.",
          "format": "int32",
          "type": "integer"
        },
        "reason": {
          "description": "(brief) reason the process is terminated",
          "type": "string"
        },
        "startedAt": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "Time at which previous execution of the command started"
        }
      },
      "required": [
        "pid",
        "exitCode"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.CmdStateWaiting": {
      "description": "CmdStateWaiting is a waiting state of a local command.",
      "properties": {
        "reason": {
          "description": "(brief) reason the process is not yet running.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.CmdStatus": {
      "description": "CmdStatus defines the observed state of Cmd\n\nBased loosely on ContainerStatus in Kubernetes",
      "properties": {
        "ready": {
          "description": "Specifies whether the command has passed its readiness probe.\n\nTerminating the command does not change its Ready state.\n\nIs always true when no readiness probe is defined.",
          "type": "boolean"
        },
        "running": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.CmdStateRunning",
          "description": "Details about a running process."
        },
        "terminated": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.CmdStateTerminated",
          "description": "Details about a terminated process."
        },
        "waiting": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.CmdStateWaiting",
          "description": "Details about a waiting process."
        }
      },
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.ContainerLogStreamStatus": {
      "description": "ContainerLogStreamStatus defines the current status of each individual container log stream.",
      "properties": {
        "active": {
          "description": "True when the stream is set up and streaming logs properly.",
          "type": "boolean"
        },
        "error": {
          "description": "The last error message encountered while streaming.\n\nEmpty when the stream is actively streaming or successfully terminated.",
          "type": "string"
        },
        "name": {
          "description": "The name of the container.",
          "type": "string"
        },
        "terminated": {
          "description": "True when the logs are done stream and the container is terminated.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.ExecAction": {
      "description": "ExecAction describes a \"run in container\" action.",
      "properties": {
        "command": {
          "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileEvent": {
      "properties": {
        "seenFiles": {
          "description": "SeenFiles is a list of paths which changed (create, modify, or delete).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "time": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "Time is an approximate timestamp for a batch of file changes.\n\nThis will NOT exactly match any inode attributes (e.g. ctime, mtime) at the filesystem level and is purely informational or for use as an opaque watermark."
        }
      },
      "required": [
        "time",
        "seenFiles"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch": {
      "description": "FileWatch",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatchSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatchStatus"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "__internal",
          "kind": "FileWatch",
          "version": "v1alpha1"
        },
        {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatchList": {
      "description": "FileWatchList",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "__internal",
          "kind": "FileWatchList",
          "version": "v1alpha1"
        },
        {
          "group": "tilt.dev",
          "kind": "FileWatchList",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatchSpec": {
      "description": "FileWatchSpec defines the desired state of FileWatch",
      "properties": {
        "ignores": {
          "description": "Ignores are optional rules to filter out a subset of changes matched by WatchedPaths.",
          "items": {
            "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.IgnoreDef"
          },
          "type": "array"
        },
        "watchedPaths": {
          "description": "WatchedPaths are paths of directories or files to watch for changes to. It cannot be empty.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "watchedPaths"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatchStatus": {
      "description": "FileWatchStatus defines the observed state of FileWatch",
      "properties": {
        "error": {
          "description": "Error is set if there is a problem with the filesystem watch. If non-empty, consumers should assume that no filesystem events will be seen and that the file watcher is in a failed state.",
          "type": "string"
        },
        "fileEvents": {
          "description": "FileEvents summarizes batches of file changes (create, modify, or delete) that have been seen in ascending chronological order. Only the most recent 20 events are included.",
          "items": {
            "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileEvent"
          },
          "type": "array"
        },
        "lastEventTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "LastEventTime is the timestamp of the most recent file event. It is zero if no events have been seen yet.\n\nIf the specifics of which files changed are not important, this field can be used as a watermark without needing to inspect FileEvents."
        },
        "monitorStartTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "MonitorStartTime is the timestamp of when filesystem monitor was started. It is zero if the monitor has not been started yet."
        }
      },
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.HTTPGetAction": {
      "description": "HTTPGetAction describes an action based on HTTP Get requests.",
      "properties": {
        "host": {
          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
          "type": "string"
        },
        "httpHeaders": {
          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
          "items": {
            "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.HTTPHeader"
          },
          "type": "array"
        },
        "path": {
          "description": "Path to access on the HTTP server.",
          "type": "string"
        },
        "port": {
          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535.",
          "format": "int32",
          "type": "integer"
        },
        "scheme": {
          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
          "type": "string"
        }
      },
      "required": [
        "port"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.HTTPHeader": {
      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
      "properties": {
        "name": {
          "description": "The header field name",
          "type": "string"
        },
        "value": {
          "description": "The header field value",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.IgnoreDef": {
      "properties": {
        "basePath": {
          "description": "BasePath is the base path for the patterns. It cannot be empty.\n\nIf no patterns are specified, everything under it will be recursively ignored.",
          "type": "string"
        },
        "patterns": {
          "description": "Patterns are dockerignore style rules. Absolute-style patterns will be rooted to the BasePath.\n\nSee https://docs.docker.com/engine/reference/builder/#dockerignore-file.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "basePath"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream": {
      "description": "PodLogStream\n\nStreams logs from a pod on Kubernetes into the core Tilt engine.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStreamSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStreamStatus"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "__internal",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        },
        {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStreamList": {
      "description": "PodLogStreamList",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "__internal",
          "kind": "PodLogStreamList",
          "version": "v1alpha1"
        },
        {
          "group": "tilt.dev",
          "kind": "PodLogStreamList",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStreamSpec": {
      "description": "PodLogStreamSpec defines the desired state of PodLogStream\n\nTranslated into a PodLog query to the current Kubernetes cluster: https://pkg.go.dev/k8s.io/api/core/v1#PodLogOptions\n\nwhich Kubernetes context to use?",
      "properties": {
        "ignoreContainers": {
          "description": "The names of containers to exclude from the stream.\n\nIf `onlyContainers` and `ignoreContainers` are not set, will watch all containers in the pod.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "namespace": {
          "description": "The namespace of the pod to watch. Defaults to the kubecontext default namespace.",
          "type": "string"
        },
        "onlyContainers": {
          "description": "The names of containers to include in the stream.\n\nIf `onlyContainers` and `ignoreContainers` are not set, will watch all containers in the pod.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pod": {
          "description": "The name of the pod to watch. Required.",
          "type": "string"
        },
        "sinceTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "An RFC3339 timestamp from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned.\n\nTranslates directly to the underlying PodLogOptions."
        }
      },
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStreamStatus": {
      "description": "PodLogStreamStatus defines the observed state of PodLogStream",
      "properties": {
        "containerStatuses": {
          "description": "A list of containers being watched.",
          "items": {
            "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.ContainerLogStreamStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Probe": {
      "description": "Probe describes a health check to be performed o determine whether it is alive or ready to receive traffic.",
      "properties": {
        "exec": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.ExecAction",
          "description": "One and only one of the following should be specified. Exec specifies the action to take."
        },
        "failureThreshold": {
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        },
        "httpGet": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.HTTPGetAction",
          "description": "HTTPGet specifies the http request to perform."
        },
        "initialDelaySeconds": {
          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "format": "int32",
          "type": "integer"
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        },
        "successThreshold": {
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        },
        "tcpSocket": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.TCPSocketAction",
          "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported"
        },
        "timeoutSeconds": {
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.RestartOnSpec": {
      "description": "RestartOnSpec indicates the set of objects that can trigger a restart of this object.",
      "properties": {
        "fileWatches": {
          "description": "A list of file watches that can trigger a restart.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "fileWatches"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session": {
      "description": "Session provides introspective data about the status of the Tilt process.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.SessionSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.SessionStatus"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "__internal",
          "kind": "Session",
          "version": "v1alpha1"
        },
        {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.SessionList": {
      "description": "SessionList is a list of Session objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "__internal",
          "kind": "SessionList",
          "version": "v1alpha1"
        },
        {
          "group": "tilt.dev",
          "kind": "SessionList",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.SessionSpec": {
      "description": "SessionSpec defines the desired state of Session",
      "properties": {
        "exitCondition": {
          "description": "ExitCondition defines the criteria for Tilt to exit.",
          "type": "string"
        },
        "tiltfilePath": {
          "description": "TiltfilePath is the path to the Tiltfile for the run. It cannot be empty.",
          "type": "string"
        }
      },
      "required": [
        "tiltfilePath",
        "exitCondition"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.SessionStatus": {
      "description": "SessionStatus defines the observed state of Session",
      "properties": {
        "done": {
          "description": "Done indicates whether this Session has completed its work and is ready to exit.",
          "type": "boolean"
        },
        "error": {
          "description": "Error is a non-empty string when the Session is Done but encountered a failure as defined by the ExitCondition from the SessionSpec.",
          "type": "string"
        },
        "pid": {
          "description": "PID is the process identifier for this instance of Tilt.",
          "format": "int64",
          "type": "integer"
        },
        "startTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "StartTime is when the Tilt engine was first started."
        },
        "targets": {
          "description": "Targets are normalized representations of the servers/jobs managed by this Session.\n\nA resource from a Tiltfile might produce one or more targets. A target can also be shared across multiple resources (e.g. an image referenced by multiple K8s pods).",
          "items": {
            "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Target"
          },
          "type": "array"
        }
      },
      "required": [
        "pid",
        "startTime",
        "targets",
        "done"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.TCPSocketAction": {
      "description": "TCPSocketAction describes an action based on opening a socket",
      "properties": {
        "host": {
          "description": "Optional: Host name to connect to, defaults to the pod IP.",
          "type": "string"
        },
        "port": {
          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "port"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Target": {
      "description": "Target is a server or job whose execution is managed as part of this Session.",
      "properties": {
        "name": {
          "description": "Name is the name of the target; this is auto-generated from Tiltfile resources.",
          "type": "string"
        },
        "resources": {
          "description": "Resources are one or more Tiltfile resources that this target is associated with.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "state": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.TargetState",
          "description": "State provides information about the current status of the target."
        },
        "type": {
          "description": "Type is the execution profile for this resource.\n\nJob targets run to completion (e.g. a build script or database migration script). Server targets run indefinitely (e.g. an HTTP server).",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type",
        "resources",
        "state"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.TargetState": {
      "description": "TargetState describes the current execution status for a target.\n\nEither EXACTLY one of Waiting, Active, or Terminated will be populated or NONE of them will be. In the event that all states are null, the target is currently inactive or disabled and should not be expected to execute.",
      "properties": {
        "active": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.TargetStateActive",
          "description": "Active being non-nil indicates that the target is currently executing."
        },
        "terminated": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.TargetStateTerminated",
          "description": "Terminated being non-nil indicates that the target finished execution either normally or due to failure."
        },
        "waiting": {
          "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.TargetStateWaiting",
          "description": "Waiting being non-nil indicates that the next execution of the target has been queued but not yet started."
        }
      },
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.TargetStateActive": {
      "description": "TargetStateActive is a target that is currently running but has not yet finished.",
      "properties": {
        "ready": {
          "description": "Ready indicates that the target has passed readiness checks.\n\nIf the target does not use or support readiness checks, this is always true.",
          "type": "boolean"
        },
        "startTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "StartTime is when execution began."
        }
      },
      "required": [
        "startTime",
        "ready"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.TargetStateTerminated": {
      "description": "TargetStateTerminated is a target that finished running, either because it completed successfully or encountered an error.",
      "properties": {
        "error": {
          "description": "Error is a non-empty string if the target encountered a failure during execution that caused it to stop.\n\nFor targets of type TargetTypeServer, this is always populated, as the target is expected to run indefinitely, and thus any termination is an error.",
          "type": "string"
        },
        "finishTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "FinishTime is when the target stopped executing."
        },
        "startTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "StartTime is when the target began executing."
        }
      },
      "required": [
        "startTime",
        "finishTime"
      ],
      "type": "object"
    },
    "com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.TargetStateWaiting": {
      "description": "TargetStateWaiting is a target that has been enqueued for execution but has not yet started.",
      "properties": {
        "waitReason": {
          "description": "WaitReason is a description for why the target is waiting and not yet active.\n\nThis is NOT the \"cause\" or \"trigger\" for the target being invoked.",
          "type": "string"
        }
      },
      "required": [
        "waitReason"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup": {
      "description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "name is the name of the group.",
          "type": "string"
        },
        "preferredVersion": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery",
          "description": "preferredVersion is the version preferred by the API server, which probably is the storage version."
        },
        "serverAddressByClientCIDRs": {
          "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
          },
          "type": "array"
        },
        "versions": {
          "description": "versions are the versions supported in this group.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
          },
          "type": "array"
        }
      },
      "required": [
        "name",
        "versions"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIGroup",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList": {
      "description": "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "groups": {
          "description": "groups is a list of APIGroup.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        }
      },
      "required": [
        "groups"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIGroupList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIResource": {
      "description": "APIResource specifies the name of a resource and whether it is namespaced.",
      "properties": {
        "categories": {
          "description": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "group": {
          "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
          "type": "string"
        },
        "kind": {
          "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
          "type": "string"
        },
        "name": {
          "description": "name is the plural name of the resource.",
          "type": "string"
        },
        "namespaced": {
          "description": "namespaced indicates if a resource is namespaced or not.",
          "type": "boolean"
        },
        "shortNames": {
          "description": "shortNames is a list of suggested short names of the resource.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "singularName": {
          "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
          "type": "string"
        },
        "storageVersionHash": {
          "description": "The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.",
          "type": "string"
        },
        "verbs": {
          "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "version": {
          "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
          "type": "string"
        }
      },
      "required": [
        "name",
        "singularName",
        "namespaced",
        "kind",
        "verbs"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList": {
      "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "groupVersion": {
          "description": "groupVersion is the group and version this APIResourceList is for.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "resources": {
          "description": "resources contains the name of the resources and if they are namespaced.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource"
          },
          "type": "array"
        }
      },
      "required": [
        "groupVersion",
        "resources"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIResourceList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions": {
      "description": "DeleteOptions may be provided when deleting an API object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "dryRun": {
          "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "gracePeriodSeconds": {
          "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "format": "int64",
          "type": "integer"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "orphanDependents": {
          "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "type": "boolean"
        },
        "preconditions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions",
          "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned."
        },
        "propagationPolicy": {
          "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "tilt.dev",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery": {
      "description": "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
      "properties": {
        "groupVersion": {
          "description": "groupVersion specifies the API group and version in the form \"group/version\"",
          "type": "string"
        },
        "version": {
          "description": "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
          "type": "string"
        }
      },
      "required": [
        "groupVersion",
        "version"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": "string"
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "format": "int64",
          "type": "integer"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
          "type": "string"
        },
        "fieldsType": {
          "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
          "type": "string"
        },
        "fieldsV1": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1",
          "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type."
        },
        "manager": {
          "description": "Manager is an identifier of the workflow managing these fields.",
          "type": "string"
        },
        "operation": {
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime": {
      "description": "MicroTime is version of Time with microsecond level precision.",
      "format": "date-time",
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
          "type": "string"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "format": "int64",
          "type": "integer"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": "string"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "format": "int64",
          "type": "integer"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
          },
          "type": "array"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": "string"
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
          "type": "boolean"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      },
      "required": [
        "apiVersion",
        "kind",
        "name",
        "uid"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Patch": {
      "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions": {
      "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
      "properties": {
        "resourceVersion": {
          "description": "Specifies the target ResourceVersion",
          "type": "string"
        },
        "uid": {
          "description": "Specifies the target UID.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR": {
      "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
      "properties": {
        "clientCIDR": {
          "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
          "type": "string"
        },
        "serverAddress": {
          "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
          "type": "string"
        }
      },
      "required": [
        "clientCIDR",
        "serverAddress"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
      "description": "Status is a return value for calls that don't return other objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "code": {
          "description": "Suggested HTTP return code for this status, 0 if not set.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails",
          "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type."
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the status of this operation.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        },
        "reason": {
          "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
          "type": "string"
        },
        "status": {
          "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Status",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
      "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
      "properties": {
        "field": {
          "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
          "type": "string"
        },
        "reason": {
          "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
      "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
      "properties": {
        "causes": {
          "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
          },
          "type": "array"
        },
        "group": {
          "description": "The group attribute of the resource associated with the status StatusReason.",
          "type": "string"
        },
        "kind": {
          "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
          "type": "string"
        },
        "retryAfterSeconds": {
          "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
          "format": "int32",
          "type": "integer"
        },
        "uid": {
          "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
      "format": "date-time",
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent": {
      "description": "Event represents a single event to a watched resource.",
      "properties": {
        "object": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension",
          "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context."
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "object"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "tilt.dev",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.runtime.RawExtension": {
      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.Object `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// External package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// On the wire, the JSON will look something like this: {\n\t\"kind\":\"MyAPIObject\",\n\t\"apiVersion\":\"v1\",\n\t\"myPlugin\": {\n\t\t\"kind\":\"PluginA\",\n\t\t\"aOption\":\"foo\",\n\t},\n}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.version.Info": {
      "description": "Info contains versioning information. how we'll want to distribute that information.",
      "properties": {
        "buildDate": {
          "type": "string"
        },
        "compiler": {
          "type": "string"
        },
        "gitCommit": {
          "type": "string"
        },
        "gitTreeState": {
          "type": "string"
        },
        "gitVersion": {
          "type": "string"
        },
        "goVersion": {
          "type": "string"
        },
        "major": {
          "type": "string"
        },
        "minor": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        }
      },
      "required": [
        "major",
        "minor",
        "gitVersion",
        "gitCommit",
        "gitTreeState",
        "buildDate",
        "goVersion",
        "compiler",
        "platform"
      ],
      "type": "object"
    }
  },
  "info": {
    "title": "tilt",
    "version": "unversioned"
  },
  "paths": {
    "/apis/": {
      "get": {
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "description": "get available API versions",
        "operationId": "getAPIVersions",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "apis"
        ]
      }
    },
    "/apis/tilt.dev/": {
      "get": {
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "description": "get information of a group",
        "operationId": "getTiltDevAPIGroup",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev"
        ]
      }
    },
    "/apis/tilt.dev/v1alpha1/": {
      "get": {
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "description": "get available resources",
        "operationId": "getTiltDevV1alpha1APIResources",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ]
      }
    },
    "/apis/tilt.dev/v1alpha1/cmds": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of Cmd",
        "operationId": "deleteTiltDevV1alpha1CollectionCmd",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersionMatch",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind Cmd",
        "operationId": "listTiltDevV1alpha1Cmd",
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersionMatch",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.CmdList"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a Cmd",
        "operationId": "createTiltDevV1alpha1Cmd",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      }
    },
    "/apis/tilt.dev/v1alpha1/cmds/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a Cmd",
        "operationId": "deleteTiltDevV1alpha1Cmd",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified Cmd",
        "operationId": "readTiltDevV1alpha1Cmd",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "name of the Cmd",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "description": "partially update the specified Cmd",
        "operationId": "patchTiltDevV1alpha1Cmd",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "in": "query",
            "name": "force",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified Cmd",
        "operationId": "replaceTiltDevV1alpha1Cmd",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      }
    },
    "/apis/tilt.dev/v1alpha1/cmds/{name}/status": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete status of a Cmd",
        "operationId": "deleteTiltDevV1alpha1CmdStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read status of the specified Cmd",
        "operationId": "readTiltDevV1alpha1CmdStatus",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "name of the Cmd",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "description": "partially update status of the specified Cmd",
        "operationId": "patchTiltDevV1alpha1CmdStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "in": "query",
            "name": "force",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create status of a Cmd",
        "operationId": "createTiltDevV1alpha1CmdStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace status of the specified Cmd",
        "operationId": "replaceTiltDevV1alpha1CmdStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Cmd"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      }
    },
    "/apis/tilt.dev/v1alpha1/filewatches": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of FileWatch",
        "operationId": "deleteTiltDevV1alpha1CollectionFileWatch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersionMatch",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind FileWatch",
        "operationId": "listTiltDevV1alpha1FileWatch",
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersionMatch",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatchList"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a FileWatch",
        "operationId": "createTiltDevV1alpha1FileWatch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      }
    },
    "/apis/tilt.dev/v1alpha1/filewatches/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a FileWatch",
        "operationId": "deleteTiltDevV1alpha1FileWatch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified FileWatch",
        "operationId": "readTiltDevV1alpha1FileWatch",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "name of the FileWatch",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "description": "partially update the specified FileWatch",
        "operationId": "patchTiltDevV1alpha1FileWatch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "in": "query",
            "name": "force",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified FileWatch",
        "operationId": "replaceTiltDevV1alpha1FileWatch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      }
    },
    "/apis/tilt.dev/v1alpha1/filewatches/{name}/status": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete status of a FileWatch",
        "operationId": "deleteTiltDevV1alpha1FileWatchStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read status of the specified FileWatch",
        "operationId": "readTiltDevV1alpha1FileWatchStatus",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "name of the FileWatch",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "description": "partially update status of the specified FileWatch",
        "operationId": "patchTiltDevV1alpha1FileWatchStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "in": "query",
            "name": "force",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create status of a FileWatch",
        "operationId": "createTiltDevV1alpha1FileWatchStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace status of the specified FileWatch",
        "operationId": "replaceTiltDevV1alpha1FileWatchStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.FileWatch"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      }
    },
    "/apis/tilt.dev/v1alpha1/podlogstreams": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of PodLogStream",
        "operationId": "deleteTiltDevV1alpha1CollectionPodLogStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersionMatch",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind PodLogStream",
        "operationId": "listTiltDevV1alpha1PodLogStream",
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersionMatch",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStreamList"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a PodLogStream",
        "operationId": "createTiltDevV1alpha1PodLogStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      }
    },
    "/apis/tilt.dev/v1alpha1/podlogstreams/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a PodLogStream",
        "operationId": "deleteTiltDevV1alpha1PodLogStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified PodLogStream",
        "operationId": "readTiltDevV1alpha1PodLogStream",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "name of the PodLogStream",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "description": "partially update the specified PodLogStream",
        "operationId": "patchTiltDevV1alpha1PodLogStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "in": "query",
            "name": "force",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified PodLogStream",
        "operationId": "replaceTiltDevV1alpha1PodLogStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      }
    },
    "/apis/tilt.dev/v1alpha1/podlogstreams/{name}/status": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete status of a PodLogStream",
        "operationId": "deleteTiltDevV1alpha1PodLogStreamStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read status of the specified PodLogStream",
        "operationId": "readTiltDevV1alpha1PodLogStreamStatus",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "name of the PodLogStream",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "description": "partially update status of the specified PodLogStream",
        "operationId": "patchTiltDevV1alpha1PodLogStreamStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "in": "query",
            "name": "force",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create status of a PodLogStream",
        "operationId": "createTiltDevV1alpha1PodLogStreamStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace status of the specified PodLogStream",
        "operationId": "replaceTiltDevV1alpha1PodLogStreamStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.PodLogStream"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      }
    },
    "/apis/tilt.dev/v1alpha1/sessions": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of Session",
        "operationId": "deleteTiltDevV1alpha1CollectionSession",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersionMatch",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind Session",
        "operationId": "listTiltDevV1alpha1Session",
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "in": "query",
            "name": "resourceVersionMatch",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.SessionList"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a Session",
        "operationId": "createTiltDevV1alpha1Session",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      }
    },
    "/apis/tilt.dev/v1alpha1/sessions/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a Session",
        "operationId": "deleteTiltDevV1alpha1Session",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified Session",
        "operationId": "readTiltDevV1alpha1Session",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "name of the Session",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "description": "partially update the specified Session",
        "operationId": "patchTiltDevV1alpha1Session",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "in": "query",
            "name": "force",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified Session",
        "operationId": "replaceTiltDevV1alpha1Session",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      }
    },
    "/apis/tilt.dev/v1alpha1/sessions/{name}/status": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete status of a Session",
        "operationId": "deleteTiltDevV1alpha1SessionStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read status of the specified Session",
        "operationId": "readTiltDevV1alpha1SessionStatus",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "name of the Session",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "description": "partially update status of the specified Session",
        "operationId": "patchTiltDevV1alpha1SessionStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "in": "query",
            "name": "force",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create status of a Session",
        "operationId": "createTiltDevV1alpha1SessionStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace status of the specified Session",
        "operationId": "replaceTiltDevV1alpha1SessionStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          },
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tilt-dev.tilt.pkg.apis.core.v1alpha1.Session"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      }
    },
    "/apis/tilt.dev/v1alpha1/watch/cmds": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of Cmd. deprecated: use the 'watch' parameter with a list operation instead.",
        "operationId": "watchTiltDevV1alpha1CmdList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "in": "query",
          "name": "allowWatchBookmarks",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersionMatch",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/apis/tilt.dev/v1alpha1/watch/cmds/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind Cmd. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "operationId": "watchTiltDevV1alpha1Cmd",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "in": "query",
          "name": "allowWatchBookmarks",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the Cmd",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersionMatch",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/apis/tilt.dev/v1alpha1/watch/cmds/{name}/status": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to status of an object of kind Cmd. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "operationId": "watchTiltDevV1alpha1CmdStatus",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Cmd",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "in": "query",
          "name": "allowWatchBookmarks",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the Cmd",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersionMatch",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/apis/tilt.dev/v1alpha1/watch/filewatches": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of FileWatch. deprecated: use the 'watch' parameter with a list operation instead.",
        "operationId": "watchTiltDevV1alpha1FileWatchList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "in": "query",
          "name": "allowWatchBookmarks",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersionMatch",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/apis/tilt.dev/v1alpha1/watch/filewatches/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind FileWatch. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "operationId": "watchTiltDevV1alpha1FileWatch",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "in": "query",
          "name": "allowWatchBookmarks",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the FileWatch",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersionMatch",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/apis/tilt.dev/v1alpha1/watch/filewatches/{name}/status": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to status of an object of kind FileWatch. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "operationId": "watchTiltDevV1alpha1FileWatchStatus",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "FileWatch",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "in": "query",
          "name": "allowWatchBookmarks",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the FileWatch",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersionMatch",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/apis/tilt.dev/v1alpha1/watch/podlogstreams": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of PodLogStream. deprecated: use the 'watch' parameter with a list operation instead.",
        "operationId": "watchTiltDevV1alpha1PodLogStreamList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "in": "query",
          "name": "allowWatchBookmarks",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersionMatch",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/apis/tilt.dev/v1alpha1/watch/podlogstreams/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind PodLogStream. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "operationId": "watchTiltDevV1alpha1PodLogStream",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "in": "query",
          "name": "allowWatchBookmarks",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the PodLogStream",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersionMatch",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/apis/tilt.dev/v1alpha1/watch/podlogstreams/{name}/status": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to status of an object of kind PodLogStream. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "operationId": "watchTiltDevV1alpha1PodLogStreamStatus",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "PodLogStream",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "in": "query",
          "name": "allowWatchBookmarks",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the PodLogStream",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersionMatch",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/apis/tilt.dev/v1alpha1/watch/sessions": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of Session. deprecated: use the 'watch' parameter with a list operation instead.",
        "operationId": "watchTiltDevV1alpha1SessionList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "in": "query",
          "name": "allowWatchBookmarks",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersionMatch",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/apis/tilt.dev/v1alpha1/watch/sessions/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind Session. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "operationId": "watchTiltDevV1alpha1Session",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "in": "query",
          "name": "allowWatchBookmarks",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the Session",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersionMatch",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/apis/tilt.dev/v1alpha1/watch/sessions/{name}/status": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to status of an object of kind Session. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "operationId": "watchTiltDevV1alpha1SessionStatus",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "tiltDev_v1alpha1"
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "tilt.dev",
          "kind": "Session",
          "version": "v1alpha1"
        }
      },
      "parameters": [
        {
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "in": "query",
          "name": "allowWatchBookmarks",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the Session",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "in": "query",
          "name": "resourceVersionMatch",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/version/": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "get the code version",
        "operationId": "getCodeVersion",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.version.Info"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          "version"
        ]
      }
    }
  },
  "swagger": "2.0"
}
